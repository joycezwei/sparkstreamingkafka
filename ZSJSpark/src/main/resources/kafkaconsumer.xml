<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
     http://www.springframework.org/schema/jee 
     http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
     http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context-3.0.xsd">
       
    
    <!-- 定义consumer的参数 -->
     <bean id="consumerProperties" class="java.util.HashMap">
         <constructor-arg>
             <map>
                 <entry key="bootstrap.servers" value="192.168.3.76:9092"/>
                 <entry key="group.id" value="0"/>
                 <entry key="enable.auto.commit" value="false"/>
                 <entry key="auto.commit.interval.ms" value="1000"/>
                 <entry key="session.timeout.ms" value="15000"/>
                 <entry key="key.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
                 <entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
             </map>
         </constructor-arg>
     </bean>
     
     <!-- 创建consumerFactory bean -->
     <bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
         <constructor-arg>
             <ref bean="consumerProperties"/>
         </constructor-arg>
     </bean>
     
     <!-- 实际执行消息消费的类 -->
     <bean id="messageListernerConsumerService" class="com.st.zsjspark.service.impl.KafkaConsumerServiceImpl"/>
     


	 <!-- 消费者容器配置信息 -->
     <bean id="containerOtherProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
     	<constructor-arg value="ReData_Connections"/>
     	<property name="messageListener" ref="messageListernerConsumerService"/>
     </bean>

	 <!-- 创建messageListenerContainer bean，使用的时候，只需要注入这个bean -->
     <bean id="messageOtherListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" 
     	init-method="doStart">
     	<constructor-arg ref="consumerFactory"/>
     	<constructor-arg ref="containerOtherProperties"/>
     </bean>
     
     <!-- 消费者容器配置信息 -->
     <bean id="containerProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
     	<constructor-arg value="ReData_MachineReal"/>
     	<property name="messageListener" ref="messageListernerConsumerService"/>
     </bean>
     
     <!-- 创建messageListenerContainer bean，使用的时候，只需要注入这个bean -->
     <bean id="messageListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" 
     	init-method="doStart">
     	<constructor-arg ref="consumerFactory"/>
     	<constructor-arg ref="containerProperties"/>
     </bean>
     
     <!-- 消费者容器配置信息 -->
     <bean id="containerPatternProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
     	<constructor-arg value="ReData_Pattern"/>
     	<property name="messageListener" ref="messageListernerConsumerService"/>
     </bean>
     
     <!-- 创建messageListenerContainer bean，使用的时候，只需要注入这个bean -->
     <bean id="messagePatternListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" 
     	init-method="doStart">
     	<constructor-arg ref="consumerFactory"/>
     	<constructor-arg ref="containerPatternProperties"/>
     </bean>
     
          <!-- 消费者容器配置信息 -->
     <bean id="containerWorkTimeProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
     	<constructor-arg value="ReData_WorkTime"/>
     	<property name="messageListener" ref="messageListernerConsumerService"/>
     </bean>
     
     <!-- 创建messageListenerContainer bean，使用的时候，只需要注入这个bean -->
     <bean id="messageWorkTimeListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" 
     	init-method="doStart">
     	<constructor-arg ref="consumerFactory"/>
     	<constructor-arg ref="containerWorkTimeProperties"/>
     </bean>
     
               <!-- 消费者容器配置信息 -->
     <bean id="containerWarningProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
     	<constructor-arg value="ReData_Warning"/>
     	<property name="messageListener" ref="messageListernerConsumerService"/>
     </bean>
     
     <!-- 创建messageListenerContainer bean，使用的时候，只需要注入这个bean -->
     <bean id="messageWarningListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" 
     	init-method="doStart">
     	<constructor-arg ref="consumerFactory"/>
     	<constructor-arg ref="containerWarningProperties"/>
     </bean>
</beans>